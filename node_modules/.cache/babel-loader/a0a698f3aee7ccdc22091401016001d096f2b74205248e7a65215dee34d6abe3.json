{"ast":null,"code":"var _jsxFileName = \"D:\\\\TECNOWEBII\\\\client\\\\src\\\\pages\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport '../styles/QuizPage.css';\nimport QuestionItem from '../components/quiz/Questionitem';\nimport CorrectAnswer from '../components/CorrectAnswer/CorrectAnswer';\nimport IncorrectAnswer from '../components/IncorrectAnswer/IncorrectAnswer';\nimport LoadingSpinner from '../components/LoadingSpinner/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/questions/random');\n        const shuffledQuestions = res.data.map(question => ({\n          ...question,\n          respuestas: shuffleArray([...question.respuestas])\n        }));\n        setQuestions(shuffledQuestions);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n        setLoading(false);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  const shuffleArray = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n  const handleAnswer = answerId => {\n    const currentQuestionObj = questions[currentQuestion];\n    const selectedAnswer = currentQuestionObj.respuestas.find(answer => answer.id.toString() === answerId);\n    const isAnswerCorrect = selectedAnswer.es_correcta;\n    setIsCorrect(isAnswerCorrect);\n    setShowFeedback(true);\n    if (isAnswerCorrect) {\n      setScore(prevScore => prevScore + 1);\n    }\n    setTimeout(() => {\n      setShowFeedback(false);\n      const nextQuestion = currentQuestion + 1;\n      if (nextQuestion < questions.length) {\n        setCurrentQuestion(nextQuestion);\n      } else {\n        history.push('/results', {\n          score: score + (isAnswerCorrect ? 1 : 0)\n        });\n      }\n    }, 2000);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 23\n  }, this);\n  if (questions.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No se pudieron cargar las preguntas.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 38\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Pregunta \", currentQuestion + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), !showFeedback ? /*#__PURE__*/_jsxDEV(QuestionItem, {\n      question: questions[currentQuestion],\n      onAnswer: handleAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : isCorrect ? /*#__PURE__*/_jsxDEV(CorrectAnswer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(IncorrectAnswer, {\n      correctAnswer: questions[currentQuestion].respuestas.find(answer => answer.es_correcta).texto_respuesta\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Puntuaci\\xF3n actual: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"I+MxbbXCTs2NB1hGx3T/d55aduE=\", false, function () {\n  return [useHistory];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","axios","QuestionItem","CorrectAnswer","IncorrectAnswer","LoadingSpinner","jsxDEV","_jsxDEV","QuizPage","_s","questions","setQuestions","currentQuestion","setCurrentQuestion","score","setScore","showFeedback","setShowFeedback","isCorrect","setIsCorrect","loading","setLoading","history","fetchQuestions","res","get","shuffledQuestions","data","map","question","respuestas","shuffleArray","error","console","array","i","length","j","Math","floor","random","handleAnswer","answerId","currentQuestionObj","selectedAnswer","find","answer","id","toString","isAnswerCorrect","es_correcta","prevScore","setTimeout","nextQuestion","push","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onAnswer","correctAnswer","texto_respuesta","_c","$RefreshReg$"],"sources":["D:/TECNOWEBII/client/src/pages/QuizPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../styles/QuizPage.css';\r\nimport QuestionItem from '../components/quiz/Questionitem';\r\nimport CorrectAnswer from '../components/CorrectAnswer/CorrectAnswer';\r\nimport IncorrectAnswer from '../components/IncorrectAnswer/IncorrectAnswer';\r\nimport LoadingSpinner from '../components/LoadingSpinner/LoadingSpinner';\r\n\r\nconst QuizPage = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [showFeedback, setShowFeedback] = useState(false);\r\n  const [isCorrect, setIsCorrect] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/questions/random');\r\n        const shuffledQuestions = res.data.map(question => ({\r\n          ...question,\r\n          respuestas: shuffleArray([...question.respuestas])\r\n        }));\r\n        setQuestions(shuffledQuestions);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching questions:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchQuestions();\r\n  }, []);\r\n\r\n  const shuffleArray = (array) => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const handleAnswer = (answerId) => {\r\n    const currentQuestionObj = questions[currentQuestion];\r\n    const selectedAnswer = currentQuestionObj.respuestas.find(answer => answer.id.toString() === answerId);\r\n    const isAnswerCorrect = selectedAnswer.es_correcta;\r\n\r\n    setIsCorrect(isAnswerCorrect);\r\n    setShowFeedback(true);\r\n\r\n    if (isAnswerCorrect) {\r\n      setScore(prevScore => prevScore + 1);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setShowFeedback(false);\r\n      const nextQuestion = currentQuestion + 1;\r\n      if (nextQuestion < questions.length) {\r\n        setCurrentQuestion(nextQuestion);\r\n      } else {\r\n        history.push('/results', { score: score + (isAnswerCorrect ? 1 : 0) });\r\n      }\r\n    }, 2000);\r\n  };\r\n\r\n  if (loading) return <LoadingSpinner />;\r\n  if (questions.length === 0) return <div>No se pudieron cargar las preguntas.</div>;\r\n\r\n  return (\r\n    <div className=\"quiz-page\">\r\n      <h2>Pregunta {currentQuestion + 1}</h2>\r\n      {!showFeedback ? (\r\n        <QuestionItem\r\n          question={questions[currentQuestion]}\r\n          onAnswer={handleAnswer}\r\n        />\r\n      ) : isCorrect ? (\r\n        <CorrectAnswer />\r\n      ) : (\r\n        <IncorrectAnswer\r\n          correctAnswer={questions[currentQuestion].respuestas.find(answer => answer.es_correcta).texto_respuesta}\r\n        />\r\n      )}\r\n      <p>Puntuaci√≥n actual: {score}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}