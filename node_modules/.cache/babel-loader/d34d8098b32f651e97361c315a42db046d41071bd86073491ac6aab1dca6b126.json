{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tecno web 2\\\\Preg\\\\client\\\\src\\\\pages\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport QuestionItem from '../components/quiz/QuestionItem/QuestionItem';\nimport { getQuestions, submitAnswer } from '../services/api';\nimport '../styles/QuizPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await getQuestions();\n        setQuestions(response.data.slice(0, 10)); // Get first 10 questions\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  const handleAnswer = async answerId => {\n    try {\n      await submitAnswer(answerId);\n      setUserAnswers([...userAnswers, answerId]);\n      if (currentQuestionIndex < questions.length - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n      } else {\n        history.push('/results');\n      }\n    } catch (error) {\n      console.error('Error submitting answer:', error);\n    }\n  };\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n  const currentQuestion = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Question \", currentQuestionIndex + 1, \" of \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionItem, {\n      question: currentQuestion,\n      onAnswer: handleAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCurrentQuestionIndex(currentQuestionIndex + 1),\n      disabled: currentQuestionIndex === questions.length - 1,\n      className: \"next-button\",\n      children: \"Next Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"tTJOu1RV7k0lGHM00RCvd9lji1A=\", false, function () {\n  return [useHistory];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","QuestionItem","getQuestions","submitAnswer","jsxDEV","_jsxDEV","QuizPage","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","userAnswers","setUserAnswers","history","fetchQuestions","response","data","slice","error","console","handleAnswer","answerId","length","push","children","fileName","_jsxFileName","lineNumber","columnNumber","currentQuestion","className","question","onAnswer","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/Tecno web 2/Preg/client/src/pages/QuizPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport QuestionItem from '../components/quiz/QuestionItem/QuestionItem';\r\nimport { getQuestions, submitAnswer } from '../services/api';\r\nimport '../styles/QuizPage.css';\r\n\r\nconst QuizPage = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      try {\r\n        const response = await getQuestions();\r\n        setQuestions(response.data.slice(0, 10)); // Get first 10 questions\r\n      } catch (error) {\r\n        console.error('Error fetching questions:', error);\r\n      }\r\n    };\r\n\r\n    fetchQuestions();\r\n  }, []);\r\n\r\n  const handleAnswer = async (answerId) => {\r\n    try {\r\n      await submitAnswer(answerId);\r\n      setUserAnswers([...userAnswers, answerId]);\r\n      \r\n      if (currentQuestionIndex < questions.length - 1) {\r\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n      } else {\r\n        history.push('/results');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error submitting answer:', error);\r\n    }\r\n  };\r\n\r\n  if (questions.length === 0) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  const currentQuestion = questions[currentQuestionIndex];\r\n\r\n  return (\r\n    <div className=\"quiz-page\">\r\n      <h2>Question {currentQuestionIndex + 1} of {questions.length}</h2>\r\n      <QuestionItem question={currentQuestion} onAnswer={handleAnswer} />\r\n      <button \r\n        onClick={() => setCurrentQuestionIndex(currentQuestionIndex + 1)}\r\n        disabled={currentQuestionIndex === questions.length - 1}\r\n        className=\"next-button\"\r\n      >\r\n        Next Question\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}